#!/bin/bash # <- Syntax hint for GitHub
# -*- coding: utf-8, tab-width: 2 -*-


CFG[task]='gateway_positions'
CFG[t]='preview'
CFG[gateway_positions_tsv]=''


function nrbm_gateway_positions () {
  case "${CFG[t]}" in
    '' ) echo E: 'No subtask (t=)!' >&2; return 2;;

    platforms | \
    preview | \
    xaerowp | \
    '' ) nrbm_gateway_positions__eachgw; return $?;;
  esac
  "$FUNCNAME"_"${CFG[t]}" || return $?
}


function nrbm_gateway_positions__eachgw () {
  local BLOCKS="${CFG[b]:-glowstone iron_bars}" # Bottom to top
  local SRC="${CFG[gateway_positions_tsv]}"
  if [ -z "$SRC" ]; then
    SRC="$(readlink -m -- "$BASH_SOURCE")"
    SRC="${SRC%.rc}.tsv"
  fi
  local CSV_LINES=()
  readarray -t CSV_LINES < <(grep -Pe '^-?\d' -- "$SRC")
  local N_GW_TOTAL="${#CSV_LINES[@]}" N_GW_DONE=0
  local I_GW_LAST=$(( N_GW_TOTAL - 1 ))
  local $( nrbm_gateway_positions__split_csv_nums \
    "${CSV_LINES[$I_GW_LAST]}" L{X,Y,Z}= )
  local PX="$LX" PY="$LY" PZ="$LZ" # p = previous
  local PREV_SIGN_X=-1; [ "$PX" -lt 0 ] || PREV_SIGN_X=1
  local PREV_SIGN_Z=-1; [ "$PZ" -lt 0 ] || PREV_SIGN_Z=1
  local BOTTOM_DY="${CFG[dy]:-3}"
  # ^-- default: +1 for the gateway itself, +2 for the bedrock blocks above.
  local CX= CY= CZ= BN=
  local SIGN_{X,Z}=
  for CZ in "${CSV_LINES[@]}"; do
    let $( nrbm_gateway_positions__split_csv_nums "$CZ" C{X,Y,Z}= )
    SIGN_X=-1; [ "$CX" -lt 0 ] || SIGN_X=1
    SIGN_Z=-1; [ "$CZ" -lt 0 ] || SIGN_Z=1
    nrbm_gateway_positions__eachgw_"${CFG[t]}" || return $?
    PX="$CX"
    PY="$CY"
    PZ="$CZ"
    PREV_SIGN_X="$SIGN_X"
    PREV_SIGN_Z="$SIGN_Z"
    (( N_GW_DONE += 1 ))
  done
}


function nrbm_gateway_positions__split_csv_nums () {
  set -- "${1//$'\t'/,}," "${@:2}"
  while [ "$#" -ge 2 ]; do
    # echo :-n "$2${1%%,*} " set -- "${1#*,}" "${@:3}" >&2
    echo -n "$2${1%%,*} "
    set -- "${1#*,}" "${@:3}"
  done
}


function nrbm_gateway_positions__eachgw_platforms () {
  echo //pos1 $(( CX - 5 )),$(( CY - 1 )),$(( CZ - 5 ))
  echo //pos2 $(( CX + 5 )),$(( CY + 1 )),$(( CZ + 5 ))
  echo //replace air,water end_stone
  echo //contract 1 u,n,s,w,e
  echo //replace end_stone air
  echo //contract 1 d
  echo //replace air,water water
  # Water block on head height, so you can initiate swimming:
  echo /setblock $(( CX - SIGN_X )) $(( $CY + 1 )) $(( CZ - SIGN_Z )) water
  # Designated arrival position:
  echo /setblock $(( CX - SIGN_X )) $(( $CY + 2 )) $(( CZ - SIGN_Z )) end_stone
  echo
}


function nrbm_gateway_positions__eachgw_preview () {
  (( CY += BOTTOM_DY ))
  for BN in $BLOCKS; do
    echo "/setblock $CX $CY $CZ $BN"
    (( CY += 1 ))
  done
}


function nrbm_gateway_positions__eachgw_xaerowp () {
  local PADDED="$N_GW_DONE"
  [ "$PADDED" -ge 10 ] || PADDED="0$PADDED"
  echo -n "waypoint:GW $PADDED central"
  local ICON="$PADDED"
  ICON="${ICON/#0/G}"
  ICON="${ICON/#1/g}"
  echo -n ":$ICON"
  echo -n ":$CX:$(( CY + 3 )):$CZ"
  echo -n ':13' # color: light purple
  echo -n ':false:0'
  echo -n ':Central End Island' # group name
  echo ':false:0:0:false'
}


function nrbm_gateway_positions_download () {
  exec < <( sed -nre 's~^ +\[(gwpos-\S+)\]: +~\1\n~p' -- gateway_positions.md )
  local N_SRC=0 FTN= URL= SAVE=
  local ALL='tmp.gwpos-all.tsv'
  >"$ALL" || return $?$(echo E: "Failed to clear $ALL!" >&2)
  while IFS= read -rs FTN; do
    IFS= read -rs URL || break
    SAVE="tmp.$FTN.tsv"
    echo -n "$SAVE <- $URL : "
    if [ -s "$SAVE" ]; then
      echo -n 'file exists, skip download. '
    else
      echo -n 'downloadâ€¦ '
      curl --silent "$URL" \
        | sed -zre 's!\s+! !g; s!<td>x:| *</td>!\n!g' \
        | sed -nre 's~^(-?[0-9]+) y:([0-9]+) z:(-?[0-9]+)$~\1\t\2\t\3~p' \
        | grep . >"$SAVE" || return 4$(echo E: 'Failed!' >&2)
    fi
    grep . "$SAVE" >>"$ALL" || return 4$(
      echo E: "Failed to append to $ALL" >&2)
    (( N_SRC += 1 ))
    echo 'done.'
  done
  ALL="$(sort --version-sort --unique -- "$ALL" | wc --lines)"
  ALL="${ALL//[^0-9]/}"
  echo "Found $ALL distinct coordinates in $N_SRC sources."
}










# This line is a work-around for a misfeature of my text editor.
